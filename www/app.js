import { demos } from './demos_index.js';
import * as wasm from './wasm/demo_app.js';

console.log("OK");

const demosList = document.getElementById("demos");

let index = 0;
demos.forEach(demo => {
    index++;
    const demoitem = document.createElement("div");
    demoitem.id = demo.name;

    const demoName = document.createElement("h2");
    demoName.className = "collapsible";
    demoName.innerText = "Demo #" + index + ": " + demo.title;
    demoitem.appendChild(demoName);

    const demoContent = getCodeElements(demo);

    const runButton = document.createElement("div");
    runButton.className = "myButton";
    runButton.innerText = "RUN";
    runButton.addEventListener("click", () => demo.run());
    demoContent.appendChild(runButton);

    demoitem.appendChild(demoContent);
    demosList.appendChild(demoitem);
});

var coll = document.getElementsByClassName("collapsible");

for (let i = 0; i < coll.length; i++) {
    coll[i].addEventListener("click", function() {
        this.classList.toggle("active");
        var content = this.nextElementSibling;
        if (content.style.display === "block") {
            content.style.display = "none";
        } else {
            content.style.display = "block";
        }
    });
}

function getCodeElements(demo) {
    const demoContent = document.createElement("div");
    demoContent.className = "content";
    const demoDesc = document.createElement("div");
    demoDesc.innerText = demo.description;
    demoContent.appendChild(demoDesc);
    demoContent.appendChild(document.createElement("br"));

    const demoCode = document.createElement("div");

    for (let index = 0; index < demo.sources.length; index++) {
        const file = demo.sources[index];
        const srcUrl = `${window.location.href}/${file}`;
        let language;
        let autoGenerated = false;
        if (file.endsWith(".js")) {
            language = "javascript";
        } else if (file.endsWith(".rs")) {
            language = "rust";
        } else if (file.endsWith(".ts")) {
            language = "typescript";
            autoGenerated = file.endsWith(".d.ts");
        }
        const demoCodeBlock = getCodeBlock(srcUrl, language);
        const header = document.createElement("h3");
        let headerText = language;
        if (autoGenerated) headerText += " (auto-generated)"
        header.innerText = headerText;
        demoCode.appendChild(header);
        demoCode.appendChild(demoCodeBlock);
        demoContent.appendChild(demoCode);
    }

    return demoContent;
}

function getCodeBlock(url, language) {
    const demoCode = document.createElement("pre");
    const demoRustCode = document.createElement("code");
    demoRustCode.className = `language-${language}`;
    wasm.get_file_via_http(url).then((text) => {
        demoRustCode.innerHTML = text;
        hljs.highlightBlock(demoRustCode);
    });
    demoCode.appendChild(demoRustCode);
    return demoCode;
}